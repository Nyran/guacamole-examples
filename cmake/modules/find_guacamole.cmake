SET(GUA_INCLUDE_SEARCH_DIR
    ${CMAKE_CURRENT_SOURCE_DIR}/../guacamole/include
)

SET(GUA_LIBRARY_SEARCH_DIR
    ${CMAKE_CURRENT_SOURCE_DIR}/../guacamole/lib
)

MESSAGE("-- checking for GUACAMOLE")

IF (${GUA_INCLUDE_DIRS} STREQUAL "NOT FOUND")

	FIND_PATH(_CUR_SEARCH
		NAMES gua/guacamole.hpp
		PATHS ${GUA_INCLUDE_SEARCH_DIR}
		NO_DEFAULT_PATH)

	IF (_CUR_SEARCH)
		MESSAGE(${GUA_INCLUDE_SEARCH_DIR})
		GET_FILENAME_COMPONENT(_INC ${GUA_INCLUDE_SEARCH_DIR} ABSOLUTE)
		SET(GUA_INCLUDE_DIR ${_INC} CACHE FILEPATH "The include directory of guacamole")
		SET(GUA_INCLUDE_DIRS ${_INC})
	ELSE (_CUR_SEARCH)
		MESSAGE(FATAL_ERROR "find_guacamole.cmake: unable to find guacamole headers")
	ENDIF(_CUR_SEARCH)

	SET(_CUR_SEARCH _CUR_SEARCH-NOTFOUND CACHE INTERNAL "internal use")

	SET(GLOBAL_EXT_DIR ${GUA_INCLUDE_DIRS}/../externals)

ENDIF(${GUA_INCLUDE_DIRS} STREQUAL "NOT FOUND")

SET (_GUA_LIBRARY_FILENAME "")
IF (UNIX)
    SET(_GUA_LIBRARY_FILENAME libguacamole.so)
ELSEIF (MSVC)
    SET(_GUA_LIBRARY_FILENAME guacamole.lib)
ENDIF(UNIX)

IF (${GUA_LIBRARY_DIRS} STREQUAL "NOT FOUND")

    FIND_PATH(_CUR_SEARCH
        NAMES ${_GUA_LIBRARY_FILENAME}
        PATHS ${GUA_LIBRARY_SEARCH_DIR}
        PATH_SUFFIXES debug release
        NO_DEFAULT_PATH)

    IF (_CUR_SEARCH)
        MESSAGE("--  found matching version")
        GET_FILENAME_COMPONENT(GUA_LIBRARY_DIRS ${GUA_LIBRARY_SEARCH_DIR} ABSOLUTE)
	    SET(GUA_LIBRARIES ${_GUA_LIBRARY_FILENAME} CACHE FILEPATH "filename of the guacamole library")
    ELSE (_CUR_SEARCH)
        MESSAGE(FATAL_ERROR "find_guacamole.cmake: unable to find guacamole library")
    ENDIF(_CUR_SEARCH)


    SET(_CUR_SEARCH _CUR_SEARCH-NOTFOUND CACHE INTERNAL "internal use")

ENDIF(${GUA_LIBRARY_DIRS} STREQUAL "NOT FOUND")
